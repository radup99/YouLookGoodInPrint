@page "/stress_test"
@using System.Net.Http.Json
@using YouLookGoodInPrint.Shared
@inject HttpClient Http
@inject TokenContainer tokenContainer
@inject DocumentsContainer docContainer
@inject PrintContainer pContainer
@inject NavigationManager UriHelper

<h3>Performance/Scalability Tests</h3>

@{
    @if (tokenContainer.Token == "null")
    {
        <p>You are not signed in.</p>
    }

    else
    {
        <p>Signed in as: @tokenContainer.UserName</p>
        <div>
            <label for="tests_no">Number of Requests</label>
            <input class="field" type="text" @bind="testCount" />
        </div>
        <button class="btn btn-primary" @onclick="StartTest">Start Test</button>
        <p>@testStatus</p>
    }
}

@code {

    public string testStatus = "";
    public int testCount;


    public async Task StartTest()
    {
        HttpResponseMessage response;
        ServerMessage message;
        int successCount = 0;

        double startTime = (DateTime.Now.ToUniversalTime() - new DateTime(1970, 1, 1)).TotalSeconds;
        for (int i = 1; i <= testCount; i++)
        {
            Document newDocument = new Document("Test Document " + i, tokenContainer.UserName, "test");
            ItemData<Document> docData = new ItemData<Document>(newDocument, tokenContainer.UserName, tokenContainer.Token, "modify");

            response = await Http.PostAsJsonAsync<ItemData<Document>>("Documents", docData);
            message = await response.Content.ReadAsAsync<ServerMessage>();

            if (message.Type != "error")
            {
                successCount++;
                if (successCount % 10 == 0)
                    Console.WriteLine("Successful POST requests: " + successCount);
            }

        }
        double endTime = (DateTime.Now.ToUniversalTime() - new DateTime(1970, 1, 1)).TotalSeconds;

        if (successCount == testCount)
        {
            double duration = endTime - startTime;
            Console.WriteLine("Test completed successfully!");
            Console.WriteLine("Time: " + duration.ToString("0.###") + " s");
            testStatus = "Test completed!";
        }
    }
}
